/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package memorygame;

import com.sun.glass.events.KeyEvent;
import java.awt.event.KeyAdapter;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import javax.swing.JOptionPane;

/**
 *
 * @author gerson
 */
public class DimesionSelectDialog extends javax.swing.JDialog {

    public GameGUI m_gamegui = null;
    private boolean m_result = false;
    private GameLogic m_gameLogic = null;
    private static final String c_configPathName = "alphabet_version/config/";    
    
    // <editor-fold defaultstate="collapsed" desc=" Get Methods ">
    public boolean getResult() {
        return m_result;
    }
    
    public GameLogic getGameLogic() {
        return m_gameLogic;
    }

// </editor-fold>
    
    
    public static GameLogic getGameLogicFromDialog(GameGUI ggui)
    {
        DimesionSelectDialog dsd = new DimesionSelectDialog(ggui, true);
        
        dsd.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(java.awt.event.KeyEvent e) {
                System.out.println(e.getKeyCode());
                if (e.getKeyCode()==KeyEvent.VK_ESCAPE) 
                        dsd.disposeMethod();
                //else if(e.getKeyCode()==KeyEvent.VK_ENTER)
                //        this.SelectButtonActionPerformed(null);

            }            
        });
        
        
        //ggui.pack();
        dsd.setLocationRelativeTo(ggui);
        dsd.setVisible(true);
        if(!dsd.getResult())
            return null;
        
        GameLogic gameLogic = dsd.getGameLogic();
        return gameLogic;
        
    }
    
    /**
     * Creates new form NewJDialog
     * @param parent
     * @param modal
     */
    private DimesionSelectDialog(GameGUI parent, boolean modal) {
        super(parent, modal);
        this.m_gamegui = parent;
        initComponents();
        
        //this can be separated in a module and better write====================
        
        Path file = Paths.get(c_configPathName+"preferred_dim");
        try (InputStream in = Files.newInputStream(file);
                BufferedReader reader
                = new BufferedReader(new InputStreamReader(in))) {
            String line = reader.readLine();
            if(line != null && line.matches("^\\d+ \\d+$")) {
                String[] dims = line.split(" ");
                NumberOfLinesField.setText(dims[0]);
                NumberOfColumnsField.setText(dims[1]);                
            }

        } catch (IOException x) {
            System.err.println(x);
        }

        //======================================================================
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SelectButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();
        NumberOfLinesField = new javax.swing.JTextField();
        NumberOfColumnsField = new javax.swing.JTextField();
        NumberOfLinesLabel = new javax.swing.JLabel();
        NumberOfColumnsLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Select a Dimension");

        SelectButton.setText("Select");
        SelectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectButtonActionPerformed(evt);
            }
        });

        CancelButton.setText("Cancel");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        NumberOfLinesLabel.setText("Number of Lines");

        NumberOfColumnsLabel.setText("Number of Columns");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 54, Short.MAX_VALUE)
                        .addComponent(SelectButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CancelButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NumberOfColumnsLabel)
                            .addComponent(NumberOfLinesLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NumberOfLinesField)
                            .addComponent(NumberOfColumnsField))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NumberOfLinesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NumberOfLinesLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NumberOfColumnsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NumberOfColumnsLabel))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SelectButton)
                    .addComponent(CancelButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SelectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectButtonActionPerformed
        int lines = 0;
        int columns = 0;
        try
        {        
            lines = Integer.parseInt(this.NumberOfLinesField.getText());
            columns = Integer.parseInt(this.NumberOfColumnsField.getText());
        }
        catch(NumberFormatException nfe)
        {
            JOptionPane.showMessageDialog(this.m_gamegui, "The fields must be filled with numbers");
            //System.out.println("Fields must be filled with numbers");
            return;
        }
        
        ReadImagesFile rif = new ReadImagesFile(BoardGUI.getConfigPathName(), BoardGUI.getImagesPathName());
        int numberOfFigures = rif.getNames().size();
        
        int maxNumberOfCards = 2*numberOfFigures;
        if(maxNumberOfCards<(lines*columns))
        {
            JOptionPane.showMessageDialog(this.m_gamegui, String.format("Not enought figures. The number of cards cannot be over %d.", maxNumberOfCards));
            return;
        }
            
        String message = "";
        Tuple<GameLogic,String> tuple = GameLogic.getGameLogic(lines, columns);
        m_gameLogic = tuple.getFirstElement();        
        if(m_gameLogic==null)
        {
            JOptionPane.showMessageDialog(this.m_gamegui,tuple.getSecondElement());
            return;
        }
        this.m_result = true;           
        dispose();
        //if(!(GameLogic.checkDimension(lines,columns, message)))
        //    JOptionPane.showMessageDialog(this, message);
        
        
    }//GEN-LAST:event_SelectButtonActionPerformed

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        //dispose();        
        disposeMethod();
    }//GEN-LAST:event_CancelButtonActionPerformed

    private void disposeMethod()
    {
        dispose();
    }
    
    // <editor-fold defaultstate="collapsed" desc=" delete later ">
    /*
    public static void main(String args[]) {
        // Set the Nimbus look and feel 
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        // If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        // For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
        //
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        // Create and display the dialog
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NewJDialog dialog = new NewJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
     */
    // </editor-fold>

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelButton;
    private javax.swing.JTextField NumberOfColumnsField;
    private javax.swing.JLabel NumberOfColumnsLabel;
    private javax.swing.JTextField NumberOfLinesField;
    private javax.swing.JLabel NumberOfLinesLabel;
    private javax.swing.JButton SelectButton;
    // End of variables declaration//GEN-END:variables

}
