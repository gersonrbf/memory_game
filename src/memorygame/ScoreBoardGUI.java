/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package memorygame;

import java.awt.Frame;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author gerson
 */
public class ScoreBoardGUI extends javax.swing.JDialog {

    private final Frame m_frame;

    /*TableRowSorter<TableModel> m_sorter = null;*/
    
    /**
     * Creates new form ScoreBoardGUI
     */
    public ScoreBoardGUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.m_frame = parent;
        initComponents();
        
        /*
        m_sorter = new TableRowSorter<>(this.scoreTable.getModel());
        scoreTable.setRowSorter(m_sorter);
        List<RowSorter.SortKey> sortKeys = new ArrayList<>();
        int columnIndexToSort = 3;
        sortKeys.add(new RowSorter.SortKey(columnIndexToSort, SortOrder.DESCENDING));
        m_sorter.setSortKeys(sortKeys);
        */
    }

    
    public int getNumberOfRows() {
        return scoreTable.getRowCount();
    }
    
    public void FillTable(ArrayList<Score> scores)
    {
        if(scores.size()>scoreTable.getRowCount())
        {
            JOptionPane.showMessageDialog(this,"There is a error in the code, the number of rows of the table is lesser than the score board");
            return;
        }
        for (int i = 0; i < scores.size(); i++) {
            Score score = scores.get(i);
            scoreTable.setValueAt(score.getName(), i, 0);
            scoreTable.setValueAt(Clock.convertTime(score.getTime()), i, 1);            
            scoreTable.setValueAt(score.getMoves(), i, 2);            
            scoreTable.setValueAt(score.getPoints(), i, 3);
        }
        //m_sorter.sort();
    }   
    
    public void cleanScoreTable() {
        for (int i = 0; i < scoreTable.getModel().getRowCount(); i++) {
            scoreTable.setValueAt("", i, 0);
            scoreTable.setValueAt("", i, 1);            
            scoreTable.setValueAt("", i, 2);            
            scoreTable.setValueAt("", i, 3);
        }
    }
    
    public void rewriteRowsBelow(int index, Score score) {        

        scoreTable.getCustomModel().insertRow(index, new Object[]{"",Clock.convertTime(score.getTime()),score.getMoves(),score.getPoints()});
        scoreTable.getCustomModel().removeRow(scoreTable.getRowCount()-1);
        scoreTable.getCustomModel().setEditable(index, 0, true);
        /*
        scoreTable.setValueAt(score.getTime(), index, 1);            
        scoreTable.setValueAt(score.getMoves(), index, 2);            
        scoreTable.setValueAt(score.getScore(), index, 3);
        */
        //System.out.println("in");

        //m_frame.pack();
        this.setLocationRelativeTo(m_frame);        
        scoreTable.removeRowSelectionInterval(0, scoreTable.getRowCount()-1);
        this.setVisible(true);
        //System.out.println("out");
        score.setName((String) scoreTable.getValueAt(index, 0));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        customTableModel1 = new memorygame.CustomTableModel();
        confirmButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        scoreTable = new memorygame.CustomTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        confirmButton.setText("Confirm");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });

        scoreTable.setModel(customTableModel1);
        jScrollPane2.setViewportView(scoreTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(confirmButton)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(confirmButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        //this.scoreTable.;
    TableCellEditor editor = this.scoreTable.getCellEditor();
    if (editor != null) 
        editor.stopCellEditing();
    this.scoreTable.getCustomModel().setAllCellUneditable();
    scoreTable.removeRowSelectionInterval(0, scoreTable.getRowCount()-1);
    dispose();
    }//GEN-LAST:event_confirmButtonActionPerformed

    /*
    public static void main(String args[]) {
        // Set the Nimbus look and feel
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        // If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        // For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
        // 
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ScoreBoardGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ScoreBoardGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ScoreBoardGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ScoreBoardGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        // Create and display the dialog   
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ScoreBoardGUI dialog = new ScoreBoardGUI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confirmButton;
    private memorygame.CustomTableModel customTableModel1;
    private javax.swing.JScrollPane jScrollPane2;
    private memorygame.CustomTable scoreTable;
    // End of variables declaration//GEN-END:variables
}